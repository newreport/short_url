{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API\n",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/user/GetAll": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system\n\u003cbr\u003e",
                "operationId": "UserController.GetAll",
                "responses": {
                    "200": {
                        "description": "{string}"
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system\n\u003cbr\u003e",
                "operationId": "UserController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The username for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password for login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} login success"
                    },
                    "403": {
                        "description": "user not exist"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Logs user into the system\n\u003cbr\u003e",
                "operationId": "UserController.Register",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{bool} register success"
                    },
                    "403": {
                        "description": "not role"
                    }
                }
            }
        },
        "/user/{uid}": {
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the user\n\u003cbr\u003e",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "title": "DeletedAt",
            "type": "object"
        },
        "gorm.Model": {
            "title": "Model",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "DefaultUrlLength": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "description": "用户名，登录名称",
                    "type": "string"
                },
                "NickName": {
                    "type": "string"
                },
                "Passwd": {
                    "type": "string"
                },
                "Remarks": {
                    "type": "string"
                },
                "Role": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.baseSqlStruct": {
            "title": "baseSqlStruct",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about Users\n"
        }
    ]
}
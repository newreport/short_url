swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /short/:
    post:
      tags:
      - short
      summary: 新增一个短链接
      description: |-
        add one short url
        <br>
      operationId: ShortController.create short
      parameters:
      - in: body
        name: short
        description: body for short
        schema:
          $ref: '#/definitions/models.Short'
      responses:
        "200":
          description: '{bool} add success'
        "403":
          description: not role
  /user/:
    get:
      tags:
      - user
      summary: 获取所有用户
      description: |-
        Logs user into the system
        <br>
      operationId: UserController.users
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: user not exist
    put:
      tags:
      - user
      summary: 修改一个用户
      description: |-
        update the user
        <br>
      operationId: UserController.update
      parameters:
      - in: body
        name: user
        description: body for user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{bool} update success!'
        "403":
          description: not have role
    post:
      tags:
      - user
      summary: 新增一个用户
      description: |-
        Logs user into the system
        <br>
      operationId: UserController.user
      parameters:
      - in: body
        name: body
        description: body for user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{bool} create success'
        "403":
          description: not role
  /user/{uid}:
    delete:
      tags:
      - user
      summary: 删除一个用户
      description: |-
        delete the user
        <br>
      operationId: UserController.Delete
      parameters:
      - in: path
        name: uid
        description: The uid you want to delete
        required: true
        schema:
          $ref: '#/definitions/unit'
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: uid is empty
  /user/login:
    get:
      tags:
      - user
      summary: 登录
      description: |-
        Logs user into the system
        <br>
      operationId: UserController.Login
      parameters:
      - in: query
        name: username
        description: The username for login
        required: true
        type: string
      - in: query
        name: password
        description: The password for login
        required: true
        type: string
      responses:
        "200":
          description: '{string} login success'
        "403":
          description: user not exist
  /user/pwd/{uid}:
    patch:
      tags:
      - user
      summary: 修改一个用户的密码
      description: |-
        update the user's password
        <br>
      operationId: UserController.update_password
      parameters:
      - in: body
        name: password
        description: body for string
        required: true
        schema:
          type: string
        type: string
      responses:
        "200":
          description: '{bool} update success!'
        "403":
          description: not have role
  /user/register:
    post:
      tags:
      - user
      summary: 注册
      description: |-
        Logs user into the system
        <br>
      operationId: UserController.register
      parameters:
      - in: body
        name: register
        description: body for user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{bool} register success'
        "403":
          description: not role
definitions:
  gorm.DeletedAt:
    title: DeletedAt
    type: object
  gorm.Model:
    title: Model
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      DeletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      ID:
        type: integer
        format: int32
      UpdatedAt:
        type: string
        format: datetime
  models.Short:
    title: Short
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      DeletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      ExpireAt:
        type: string
        format: datetime
      FKShortGroup:
        description: 外键关联分组
        type: integer
        format: int32
      FkUser:
        description: 外键关联用户
        type: integer
        format: int32
      IsEnable:
        description: 是否启用
        type: boolean
      Remarks:
        type: string
      Sid:
        description: 主键uuid
        type: string
      SourceUrl:
        description: 需要跳转的url
        type: string
      SourceUrlMD5:
        description: 需要跳转url的MD5
        type: string
      TargetUrl:
        description: 目标URL
        type: string
      UpdatedAt:
        type: string
        format: datetime
  models.User:
    title: User
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      DefaultUrlLength:
        type: integer
        format: int32
      DeletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      ID:
        type: integer
        format: int32
      Name:
        description: 用户名，登录名称
        type: string
      NickName:
        type: string
      Password:
        type: string
      Remarks:
        type: string
      Role:
        type: integer
        format: int32
      UpdatedAt:
        type: string
        format: datetime
  models.baseSqlStruct:
    title: baseSqlStruct
    type: object
  unit:
    title: unit
    type: object
tags:
- name: user
  description: |
    Operations about Users
- name: short
  description: |
    Operations about Shorts
